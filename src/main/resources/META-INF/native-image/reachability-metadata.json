{
  "reflection": [
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Lcom.sun.jna.platform.mac.SystemB$Statfs;"
    },
    {
      "type": "[Lcom.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry;"
    },
    {
      "type": "[Lio.micronaut.http.HttpMethod;"
    },
    {
      "type": "[Ljava.sql.Statement;"
    },
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder"
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware"
    },
    {
      "type": "com.aayushatharva.brotli4j.Brotli4jLoader"
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module"
    },
    {
      "type": "com.github.luben.zstd.Zstd"
    },
    {
      "type": "com.ibm.icu.text.Collator"
    },
    {
      "type": "com.jcraft.jzlib.JZlib"
    },
    {
      "type": "com.sun.jna.CallbackProxy"
    },
    {
      "type": "com.sun.jna.NativeLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.CoreFoundation$CFAllocatorRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.CoreFoundation$CFArrayRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.CoreFoundation$CFDictionaryRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.CoreFoundation$CFIndex",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.CoreFoundation$CFMutableDictionaryRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.CoreFoundation$CFStringRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.CoreFoundation$CFTypeID",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.CoreFoundation$CFTypeRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.DiskArbitration$DADiskRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.DiskArbitration$DASessionRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.IOKit$IOIterator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.IOKit$IORegistryEntry",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB",
      "allPublicFields": true
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB$HostCpuLoadInfo",
      "allDeclaredFields": true
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB$IFdata",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB$IFdata64",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB$IFmsgHdr",
      "allDeclaredFields": true
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB$IFmsgHdr2",
      "allDeclaredFields": true
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB$Statfs",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB$Timeval",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.platform.mac.SystemB$VMStatistics",
      "allDeclaredFields": true
    },
    {
      "type": "com.sun.jna.platform.unix.LibCAPI$size_t",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.ptr.IntByReference",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.ptr.PointerByReference",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.config.$MonitorAgentProperties$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.controller.$TestController$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.controller.TestController",
      "fields": [
        {
          "name": "healthReportService"
        },
        {
          "name": "metricsScheduler"
        }
      ]
    },
    {
      "type": "com.xminj.monitor.domain.$HealthReport$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.domain.HealthReport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCpuUsage",
          "parameterTypes": []
        },
        {
          "name": "getDiskTotal",
          "parameterTypes": []
        },
        {
          "name": "getDiskUsed",
          "parameterTypes": []
        },
        {
          "name": "getHostname",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getMemoryTotal",
          "parameterTypes": []
        },
        {
          "name": "getMemoryUsed",
          "parameterTypes": []
        },
        {
          "name": "getNetwork",
          "parameterTypes": []
        },
        {
          "name": "getOsName",
          "parameterTypes": []
        },
        {
          "name": "getTimestamp",
          "parameterTypes": []
        },
        {
          "name": "getUploaded",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.domain.Network",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getNetworkInterface",
          "parameterTypes": []
        },
        {
          "name": "getNetworkRecv",
          "parameterTypes": []
        },
        {
          "name": "getNetworkSent",
          "parameterTypes": []
        },
        {
          "name": "getiPv4addr",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.repository.$HealthReportRepository$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.service.$HealthReportService$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.service.HealthReportService",
      "fields": [
        {
          "name": "healthReportRepository"
        }
      ]
    },
    {
      "type": "com.xminj.monitor.service.scheduler.$MetricsScheduler$ApplicationEventListener$init1$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.service.scheduler.$MetricsScheduler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.xminj.monitor.service.scheduler.MetricsScheduler",
      "fields": [
        {
          "name": "healthReportRepository"
        },
        {
          "name": "monitorAgentProperties"
        },
        {
          "name": "taskScheduler"
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.HikariConfig",
      "allDeclaredFields": true
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolBase",
      "fields": [
        {
          "name": "catalog"
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolEntry",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.micronaut.aop.internal.InterceptorRegistryBean",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.buffer.netty.$DefaultByteBufAllocatorConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.buffer.netty.$NettyByteBufferFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.configuration.jdbc.hikari.$BeanConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.configuration.jdbc.hikari.$DatasourceConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.configuration.jdbc.hikari.$DatasourceFactory$DataSource0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.configuration.jdbc.hikari.$DatasourceFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.DefaultBeanContext$BeanDefinitionProducer",
      "fields": [
        {
          "name": "definition"
        }
      ]
    },
    {
      "type": "io.micronaut.context.annotation.Prototype"
    },
    {
      "type": "io.micronaut.context.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.env.exp.RandomPropertyExpressionResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.env.yaml.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.event.ApplicationEventPublisherFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.propagation.instrument.execution.$ExecutorServiceInstrumenter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.core.async.ReactiveStreamsTypeInformationProvider"
    },
    {
      "type": "io.micronaut.core.async.publisher.CompletableFuturePublisher"
    },
    {
      "type": "io.micronaut.core.async.publisher.Publishers"
    },
    {
      "type": "io.micronaut.core.async.publisher.Publishers$JustPublisher"
    },
    {
      "type": "io.micronaut.core.async.publisher.Publishers$JustThrowPublisher"
    },
    {
      "type": "io.micronaut.core.async.subscriber.Completable"
    },
    {
      "type": "io.micronaut.data.connection.$DefaultConnectionOperationsRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.interceptor.$ConnectableInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.jdbc.$DelegatingDataSourceResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.jdbc.advice.$ContextualAwareDataSource$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.jdbc.advice.$ContextualConnection$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.jdbc.advice.$ContextualConnectionInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.jdbc.operations.$DefaultDataSourceConnectionOperations$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.jdbc.oracle.$OracleClientInfoCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.jdbc.oracle.$OracleClientInfoConnectionCustomizer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.connection.kotlin.$DefaultCoroutineConnectionOperations$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$CountInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$DataInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$DeleteAllInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$DeleteAllReturningInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$DeleteOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$DeleteReturningManyInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$DeleteReturningOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$ExistsByInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$FindAllInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$FindByIdInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$FindCursoredPageInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$FindOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$FindOptionalInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$FindPageInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$FindSliceInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$FindStreamInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$InsertReturningManyInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$InsertReturningOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$IterableResultInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$ProcedureReturningManyInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$ProcedureReturningOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$SaveAllInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$SaveEntityInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$SaveOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$UpdateAllEntitiesInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$UpdateEntityInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$UpdateInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$UpdateReturningManyInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.$UpdateReturningOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$CountAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$DeleteAllAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$DeleteOneAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$ExistsByAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$FindAllAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$FindByIdAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$FindOneAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$FindPageAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$FindSliceAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$ProcedureReturningManyAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$ProcedureReturningOneAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$SaveAllAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$SaveEntityAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$SaveOneAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$UpdateAllEntriesAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$UpdateAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.async.$UpdateEntityAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$CountReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$DeleteAllReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$DeleteOneReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$ExistsByReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$FindAllReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$FindByIdReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$FindOneReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$FindPageReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$FindSliceReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$ProcedureReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$SaveAllReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$SaveEntityReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$SaveOneReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$UpdateAllEntitiesReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$UpdateEntityReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.intercept.reactive.$UpdateReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.config.$DataJdbcConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.config.$SchemaGenerator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleDateToInstant2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleDateToLocalDateTime1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleDateToTimestamp0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleTimestampToInstant5$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleTimestampToLocalDateTime4$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleTimestampToTimestamp3$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.mapper.$OracleJdbcJsonColumnMapper$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.mapper.$SqlResultConsumer$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.operations.$DefaultJdbcRepositoryOperations$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.operations.$DefaultJdbcSchemaHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.operations.$OracleSqlExceptionMapper$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.transaction.$TransactionManagersFactory$BuildAsyncTransactionOperations0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.jdbc.transaction.$TransactionManagersFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$CursoredPage$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$CursoredPageable$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$DefaultCursoredPage$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$DefaultCursoredPageable$DefaultCursor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$DefaultCursoredPageable$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$DefaultPage$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$DefaultPageSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$DefaultPageable$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$DefaultSlice$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$DefaultSort$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$Page$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$PageSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$Pageable$Cursor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$Pageable$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$Slice$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$Sort$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.$Sort$Order$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.jpa.criteria.impl.$LegacyQueryModelQueryBuilder$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.naming.$NamingStrategies$KebabCase$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.naming.$NamingStrategies$LowerCase$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.naming.$NamingStrategies$Raw$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.naming.$NamingStrategies$UnderScoreSeparatedLowerCase$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.naming.$NamingStrategies$UnderScoreSeparatedUpperCase$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.naming.$NamingStrategies$UpperCase$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.naming.$NamingStrategy$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.$AbstractSqlLikeQueryBuilder$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.$QueryBuilder$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.$QueryBuilder2$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.jpa.$JpaQueryBuilder$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.jpa.$JpaQueryBuilder2$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.$AbstractSqlLikeQueryBuilder2$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.$SqlQueryBuilder$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.$SqlQueryBuilder2$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.validation.$AnsiSqlTableMappingValidator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.validation.$H2SqlTableMappingValidator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.validation.$MySqlTableMappingValidator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.validation.$OracleSqlTableMappingValidator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.validation.$PostgresSqlTableMappingValidator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.model.query.builder.sql.validation.$SqlServerTableMappingValidator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.config.$DataConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.config.$DataConfiguration$PageableConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.convert.$DataConversionServiceFactory$Build0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.convert.$DataConversionServiceFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.convert.$JakartaDataConverters$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.criteria.$RuntimeCriteriaBuilder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.criteria.metamodel.$StaticMetamodelInitializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.date.$CurrentDateTimeProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.event.$EntityEventRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.event.listeners.$AnnotatedMethodInvokingEntityEventListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.event.listeners.$AutoTimestampEntityEventListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.event.listeners.$TenantIdEntityEventListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.event.listeners.$UUIDGeneratingEntityEventListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.event.listeners.$VersionGeneratingEntityEventListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.exceptions.jakarta.data.$MicronautDataJakartaDataExceptionConverter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.http.$PageableRequestArgumentBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$AbstractQueryInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DataInterceptorResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DataIntroductionAdvice$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultAbstractFindPageInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultCountInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultDeleteAllInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultDeleteAllReturningInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultDeleteOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultDeleteReturningManyInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultDeleteReturningOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultExistsByInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultFindAllInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultFindByIdInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultFindCursoredPageInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultFindOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultFindOptionalInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultFindPageInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultFindSliceInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultFindStreamInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultInsertReturningManyInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultInsertReturningOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultProcedureReturningManyInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultProcedureReturningOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultSaveAllInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultSaveEntityInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultSaveOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultUpdateAllEntitiesInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultUpdateEntityInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultUpdateInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultUpdateReturningManyInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.$DefaultUpdateReturningOneInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$AbstractAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$AbstractAsyncInterceptor2$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$AbstractConvertCompletionStageInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$AbstractCountConvertCompletionStageInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultCountAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultDeleteAllAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultDeleteOneAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultExistsByAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultFindAllAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultFindByIdAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultFindOneAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultFindPageAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultFindSliceAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultProcedureReturningManyAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultProcedureReturningOneAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultSaveAllAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultSaveEntityInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultSaveOneAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateAllAsyncEntitiesInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateEntityAsyncInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.$AbstractSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.$CountSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.$DeleteAllSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.$ExistsSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.$FindAllSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.$FindOneSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.$FindPageSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.$UpdateAllSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.async.$AbstractAsyncSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.async.$CountAsyncSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.async.$DeleteAllAsyncSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.async.$ExistsAsyncSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.async.$FindAllAsyncSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.async.$FindOneAsyncSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.async.$FindPageAsyncSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.async.$UpdateAllAsyncSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.reactive.$AbstractReactiveSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.reactive.$CountReactiveSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.reactive.$DeleteAllReactiveSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.reactive.$ExistsReactiveSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindAllReactiveSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindOneReactiveSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindPageReactiveSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.criteria.reactive.$UpdateAllReactiveSpecificationInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$AbstractCountOrEntityPublisherInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$AbstractPublisherInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$AbstractReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultCountReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteAllReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteOneReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultExistsByReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindAllReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindByIdReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindOneReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindPageReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindSliceReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultProcedureReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveAllReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveEntityReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveOneReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateAllEntitiesReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateEntityReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateReactiveInterceptor$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.mapper.$ResultConsumer$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.conf.$DataSourceMultiTenancyEnabledCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.conf.$DiscriminatorMultiTenancyEnabledCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.conf.$MultiTenancyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.conf.$SchemaMultiTenancyEnabledCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.internal.$DefaultConnectionDataSourceTenantResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.internal.$DefaultDataSourceTenantResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.internal.$DefaultSchemaTenantResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.internal.$DefaultTenantResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.multitenancy.internal.$DefaultTransactionDataSourceTenantResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.operations.$DefaultRepositoryOperationsRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.operations.internal.sql.$SqlJsonColumnMapperProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.support.$DefaultRuntimeEntityRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.support.convert.$DefaultAttributeConverterRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.support.convert.$KotlinFlow$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.support.convert.convert.jpa.$JakartaAttributeConverterProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.data.runtime.support.convert.convert.jpa.$JxAttributeConverterProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$DefaultCurrentHealthStatus$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HealthStatus$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatDiscoveryClientCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatTask$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.bind.binders.$DefaultBodyAnnotationBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$ByteArrayBodyHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$ByteBufferBodyHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$CharSequenceBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$ConversionTextPlainHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$DefaultMessageBodyHandlerRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$StringBodyReader$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextPlainObjectBodyReader$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextPlainObjectBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextStreamBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$WritableBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.codec.$CodecConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.converters.$HttpConverterRegistrar$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.expression.$RequestConditionContext$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.form.$FormConfigurationProperties$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$AbstractResource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$DefaultLink$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$GenericResource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$JsonError$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$Resource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$VndError$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.body.$NettyByteBufMessageBodyHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.body.$NettyJsonHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.body.$NettyJsonStreamHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$EpollAvailabilityCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$EpollEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$IoUringAvailabilityCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$IoUringEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$NettyThreadFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$NioEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$EventLoopLoomFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$EventLoopLoomFactory$EventLoopGroupThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$LoomCarrierConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$LoomCarrierGroup$Factory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$PrivateLoomSupport$PrivateLoomCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.configuration.$NettyGlobalConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcaster$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.websocket.$WebSocketMessageEncoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$CoroutineHelper$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$HttpServerConfiguration$CorsConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$HttpServerConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$HttpServerConfiguration$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$HttpServerConfiguration$FileTypeHandlerConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$HttpServerConfiguration$HttpLocaleResolutionConfigurationProperties$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$HttpServerConfiguration$MultipartConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$OptionsFilter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.$RouteExecutor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.binding.$BasicAuthArgumentBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.binding.$LocaleArgumentBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.binding.$RequestArgumentSatisfier$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.binding.$RouteInfoArgumentBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.binding.$RouteMatchArgumentBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.body.$FileBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.body.$InputStreamBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.body.$StreamFileBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.body.$SystemFileBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.codec.$TextStreamCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.cors.$CorsFilter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$BufferLengthExceededHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$ContentLengthExceededHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$ConversionErrorHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$CookieSizeExceededHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$DuplicateRouteHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$HttpStatusHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$JacksonExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$JsonExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$NotAllowedExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$URISyntaxHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.$UnsatisfiedRouteHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.response.$DefaultErrorResponseProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.response.$DefaultHtmlErrorResponseBodyProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.exceptions.response.$DefaultJsonErrorResponseBodyProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.filter.$DefaultFilterBodyParser$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.$DefaultHttpCompressionStrategy$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.NettyHttpResponseFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.NettyHttpServer$1"
    },
    {
      "type": "io.micronaut.http.server.netty.NettyHttpServer$Listener"
    },
    {
      "type": "io.micronaut.http.server.netty.binders.$NettyServerRequestBinderRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$AccessLogger$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http2Settings$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http3Settings$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$NettyListenerConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Parent$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Worker$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.converters.$NettyConverters$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.discovery.$NettyEmbeddedServerInstance$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.discovery.$NettyServiceDiscovery$ApplicationEventListener$onStart1$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.discovery.$NettyServiceDiscovery$ApplicationEventListener$onStop2$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.discovery.$NettyServiceDiscovery$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.handler.PipeliningServerHandler"
    },
    {
      "type": "io.micronaut.http.server.netty.ssl.$BuildSelfSignedCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$SelfSignedNotConfigured$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$SelfSignedConfigured$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.ssl.$SslEnabledCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.netty.websocket.$WebSocketUpgradeHandlerFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.util.$DefaultHttpClientAddressResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.util.$DefaultHttpHostResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.util.locale.$CompositeHttpLocaleResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.util.locale.$CookieLocaleResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.util.locale.$HttpFixedLocaleResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.util.locale.$RequestLocaleResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.server.websocket.$ServerWebSocketProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.uri.$DefaultFormUrlEncodedDecoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.util.$HtmlEntityEncodingHtmlSanitizer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.BeanProviderDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.JavaxProviderBeanDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.$BeanConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.$JacksonConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.$ObjectMapperFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.serialize.$ResourceModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jackson.validation.$ValidationJacksonDeserializationPreInstantiateCallback$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.jdbc.$JdbcDataSourceEnabled$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.$JsonObjectSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.body.$JsonMessageHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.codec.$JsonMediaTypeCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.convert.$JsonConverterRegistrar$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.$LogLevel$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.LoggingConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.impl.$Log4jLoggingSystem$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.annotation.$DefaultRetryPredicate$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.annotation.$RetryPredicate$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.intercept.$RecoveryInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.$ApplicationConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.beans.$MapperIntroduction$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.beans.$MapperMethodProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.$CompositeMessageSource$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshScopeCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.converters.time.TimeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.graceful.$GracefulShutdownConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.graceful.$GracefulShutdownListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.graceful.$GracefulShutdownManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$LoomSupport$LoomCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.async.$AsyncInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Blocking2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Io0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Virtual1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$FileWatchCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$ApplicationEventListener$scheduleTasks1$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.transaction.interceptor.$TransactionalEventInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.transaction.interceptor.$TransactionalInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.transaction.jdbc.$DataSourceTransactionManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.transaction.jdbc.$JdbcTransactionManagerCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.transaction.kotlin.$DefaultCoroutineTransactionOperations$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.transaction.support.$AbstractDataSourceTransactionManagerCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.transaction.support.$DefaultTransactionOperationsRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.transaction.test.$DefaultTestTransactionExecutionListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.$AnnotatedFilterRouteBuilder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.$AnnotatedMethodRouteBuilder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.$DefaultRouter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.$ServerFilterRouteBuilder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.naming.$HyphenatedUriNamingStrategy$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.resource.$StaticResourceConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.resource.$StaticResourceResolverFactory$Build0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.resource.$StaticResourceResolverFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.version.$ConfigurationDefaultVersionProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.version.$RouteVersionFilter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.version.$RoutesVersioningConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.version.$VersionAwareRouterListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.version.resolution.$HeaderVersionResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.version.resolution.$ParameterVersionResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.bootstrap.ServerBootstrap$1"
    },
    {
      "type": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor"
    },
    {
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.buffer.AdaptivePoolingAllocator$Chunk",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.buffer.AdaptivePoolingAllocator$Magazine",
      "fields": [
        {
          "name": "nextInLine"
        }
      ]
    },
    {
      "type": "io.netty.channel.AbstractChannelHandlerContext",
      "fields": [
        {
          "name": "handlerState"
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelOutboundBuffer",
      "fields": [
        {
          "name": "totalPendingSize"
        },
        {
          "name": "unwritable"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelConfig",
      "fields": [
        {
          "name": "autoRead"
        },
        {
          "name": "writeBufferWaterMark"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline",
      "fields": [
        {
          "name": "estimatorHandle"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext"
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$TailContext"
    },
    {
      "type": "io.netty.channel.embedded.EmbeddedChannel$2"
    },
    {
      "type": "io.netty.handler.codec.compression.JdkZlibEncoder"
    },
    {
      "type": "io.netty.handler.codec.http.HttpServerCodec"
    },
    {
      "type": "io.netty.handler.timeout.IdleStateHandler"
    },
    {
      "type": "io.netty.util.DefaultAttributeMap",
      "fields": [
        {
          "name": "attributes"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
      "fields": [
        {
          "name": "attributeMap"
        }
      ]
    },
    {
      "type": "io.netty.util.Recycler$DefaultHandle",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "type": "io.netty.util.concurrent.DefaultPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.MpscIntQueue$MpscAtomicIntegerArrayQueue",
      "fields": [
        {
          "name": "consumerIndex"
        },
        {
          "name": "producerIndex"
        },
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.SingleThreadEventExecutor",
      "fields": [
        {
          "name": "state"
        },
        {
          "name": "threadProperties"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.reactivex.Completable"
    },
    {
      "type": "io.reactivex.Maybe"
    },
    {
      "type": "io.reactivex.Observable"
    },
    {
      "type": "io.reactivex.Single"
    },
    {
      "type": "io.reactivex.rxjava3.core.Completable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Maybe"
    },
    {
      "type": "io.reactivex.rxjava3.core.Observable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Single"
    },
    {
      "type": "java.beans.Introspector"
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Double",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Object"
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ],
      "methods": [
        {
          "name": "isVirtual",
          "parameterTypes": []
        },
        {
          "name": "ofVirtual",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Thread$Builder",
      "methods": [
        {
          "name": "factory",
          "parameterTypes": []
        },
        {
          "name": "name",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "name",
          "parameterTypes": [
            "java.lang.String",
            "long"
          ]
        },
        {
          "name": "unstarted",
          "parameterTypes": [
            "java.lang.Runnable"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Thread$Builder$OfVirtual"
    },
    {
      "type": "java.lang.Throwable"
    },
    {
      "type": "java.lang.VirtualThread",
      "fields": [
        {
          "name": "DEFAULT_SCHEDULER"
        }
      ]
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.constant.ConstantDesc"
    },
    {
      "type": "java.lang.invoke.MethodHandle"
    },
    {
      "type": "java.lang.invoke.MethodHandles"
    },
    {
      "type": "java.lang.invoke.MethodHandles$Lookup"
    },
    {
      "type": "java.lang.invoke.MethodType"
    },
    {
      "type": "java.lang.reflect.Method",
      "methods": [
        {
          "name": "isDefault",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.Bits",
      "fields": [
        {
          "name": "MAX_MEMORY"
        },
        {
          "name": "UNALIGNED"
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer",
      "methods": [
        {
          "name": "alignedSlice",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.spi.SelectorProvider"
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.sql.SQLException",
      "fields": [
        {
          "name": "next"
        }
      ]
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.util.concurrent.Executors",
      "methods": [
        {
          "name": "newThreadPerTaskExecutor",
          "parameterTypes": [
            "java.util.concurrent.ThreadFactory"
          ]
        }
      ]
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64$Cell",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "jdk.internal.jrtfs.JrtFileSystemProvider"
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "org.h2.Driver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.mvstore.MVStore$TxCounter",
      "fields": [
        {
          "name": "counter"
        }
      ]
    },
    {
      "type": "org.h2.mvstore.Page",
      "fields": [
        {
          "name": "pos"
        }
      ]
    },
    {
      "type": "org.h2.mvstore.db.LobStorageMap$BlobMeta$Type",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.h2.mvstore.db.LobStorageMap$BlobReference$Type",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.h2.mvstore.db.NullValueDataType",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.h2.mvstore.db.RowDataType$Factory",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.mvstore.tx.VersionedValueType$Factory",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.mvstore.type.ByteArrayDataType",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.h2.mvstore.type.LongDataType",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.h2.server.TcpServer"
    },
    {
      "type": "org.h2.store.fs.async.FilePathAsync",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.store.fs.mem.FilePathMem",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.store.fs.mem.FilePathMemLZF",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.store.fs.niomapped.FilePathNioMapped",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.store.fs.niomem.FilePathNioMem",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.store.fs.niomem.FilePathNioMemLZF",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.store.fs.retry.FilePathRetryOnInterrupt",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.store.fs.split.FilePathSplit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.store.fs.zip.FilePathZip",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.locationtech.jts.geom.Geometry"
    },
    {
      "type": "oshi.jna.ByRef$CloseableIntByReference",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "oshi.jna.ByRef$CloseableLongByReference",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "oshi.jna.ByRef$CloseableSizeTByReference",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "oshi.jna.Struct$CloseableHostCpuLoadInfo",
      "allDeclaredFields": true
    },
    {
      "type": "oshi.jna.Struct$CloseableTimeval",
      "allDeclaredFields": true
    },
    {
      "type": "oshi.jna.Struct$CloseableVMStatistics",
      "allDeclaredFields": true
    },
    {
      "type": "oshi.jna.platform.mac.SystemConfiguration$SCNetworkInterfaceRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ],
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "sun.nio.ch.SelectorImpl",
      "fields": [
        {
          "name": "publicSelectedKeys"
        },
        {
          "name": "selectedKeys"
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SecureRandom",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "void"
    },
    {
      "type": {
        "proxy": [
          "com.sun.jna.platform.mac.CoreFoundation"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "com.sun.jna.platform.mac.DiskArbitration"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "com.sun.jna.platform.mac.IOKit"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "com.sun.jna.platform.mac.SystemB"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.sql.Connection"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "oshi.jna.platform.mac.SystemB"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "oshi.jna.platform.mac.SystemConfiguration"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": "META-INF/micronaut/"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/com.fasterxml.jackson.databind.Module"
    },
    {
      "glob": "META-INF/services/io.micronaut.context.ApplicationContextConfigurer"
    },
    {
      "glob": "META-INF/services/io.micronaut.context.env.PropertyExpressionResolver"
    },
    {
      "glob": "META-INF/services/io.micronaut.context.env.PropertySourceLoader"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.beans.BeanIntrospectionReference"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.convert.TypeConverterRegistrar"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.optim.StaticOptimizations$Loader"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.type.TypeInformationProvider"
    },
    {
      "glob": "META-INF/services/io.micronaut.http.HttpResponseFactory"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.nio.file.spi.FileSystemProvider"
    },
    {
      "glob": "META-INF/services/java.sql.Driver"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.parsers.SAXParserFactory"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "com/sun/jna/darwin-x86-64/libjnidispatch.jnilib"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "micronaut-banner.txt"
    },
    {
      "glob": "org/h2/util/data.zip"
    },
    {
      "glob": "oshi.macos.versions.properties"
    },
    {
      "glob": "oshi.properties"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/nfc.nrm"
    },
    {
      "module": "java.xml",
      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
    },
    {
      "module": "jdk.jfr",
      "glob": "jdk/jfr/internal/types/metadata.bin"
    }
  ],
  
  "bundles": [],
  "jni": [
    {
      "type": "com.sun.jna.Callback"
    },
    {
      "type": "com.sun.jna.CallbackReference",
      "methods": [
        {
          "name": "getCallback",
          "parameterTypes": [
            "java.lang.Class",
            "com.sun.jna.Pointer",
            "boolean"
          ]
        },
        {
          "name": "getFunctionPointer",
          "parameterTypes": [
            "com.sun.jna.Callback",
            "boolean"
          ]
        },
        {
          "name": "getNativeString",
          "parameterTypes": [
            "java.lang.Object",
            "boolean"
          ]
        },
        {
          "name": "initializeThread",
          "parameterTypes": [
            "com.sun.jna.Callback",
            "com.sun.jna.CallbackReference$AttachOptions"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.CallbackReference$AttachOptions"
    },
    {
      "type": "com.sun.jna.FromNativeConverter",
      "methods": [
        {
          "name": "nativeType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.IntegerType",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "com.sun.jna.JNIEnv"
    },
    {
      "type": "com.sun.jna.Native",
      "methods": [
        {
          "name": "dispose",
          "parameterTypes": []
        },
        {
          "name": "fromNative",
          "parameterTypes": [
            "com.sun.jna.FromNativeConverter",
            "java.lang.Object",
            "java.lang.reflect.Method"
          ]
        },
        {
          "name": "fromNative",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.Object"
          ]
        },
        {
          "name": "fromNative",
          "parameterTypes": [
            "java.lang.reflect.Method",
            "java.lang.Object"
          ]
        },
        {
          "name": "nativeType",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "toNative",
          "parameterTypes": [
            "com.sun.jna.ToNativeConverter",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.Native$ffi_callback",
      "methods": [
        {
          "name": "invoke",
          "parameterTypes": [
            "long",
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.NativeMapped",
      "methods": [
        {
          "name": "toNative",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.Pointer",
      "fields": [
        {
          "name": "peer"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.PointerType",
      "fields": [
        {
          "name": "pointer"
        }
      ]
    },
    {
      "type": "com.sun.jna.Structure",
      "fields": [
        {
          "name": "memory"
        },
        {
          "name": "typeInfo"
        }
      ],
      "methods": [
        {
          "name": "autoRead",
          "parameterTypes": []
        },
        {
          "name": "autoWrite",
          "parameterTypes": []
        },
        {
          "name": "getTypeInfo",
          "parameterTypes": []
        },
        {
          "name": "newInstance",
          "parameterTypes": [
            "java.lang.Class",
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.Structure$ByValue"
    },
    {
      "type": "com.sun.jna.Structure$FFIType$FFITypes",
      "fields": [
        {
          "name": "ffi_type_double"
        },
        {
          "name": "ffi_type_float"
        },
        {
          "name": "ffi_type_longdouble"
        },
        {
          "name": "ffi_type_pointer"
        },
        {
          "name": "ffi_type_sint16"
        },
        {
          "name": "ffi_type_sint32"
        },
        {
          "name": "ffi_type_sint64"
        },
        {
          "name": "ffi_type_sint8"
        },
        {
          "name": "ffi_type_uint16"
        },
        {
          "name": "ffi_type_uint32"
        },
        {
          "name": "ffi_type_uint64"
        },
        {
          "name": "ffi_type_uint8"
        },
        {
          "name": "ffi_type_void"
        }
      ]
    },
    {
      "type": "com.sun.jna.WString",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "char"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Object",
      "methods": [
        {
          "name": "toString",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "short"
          ]
        }
      ]
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "java.lang.String"
          ]
        },
        {
          "name": "getBytes",
          "parameterTypes": []
        },
        {
          "name": "getBytes",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "toCharArray",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.System",
      "methods": [
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.UnsatisfiedLinkError",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.reflect.Method",
      "methods": [
        {
          "name": "getParameterTypes",
          "parameterTypes": []
        },
        {
          "name": "getReturnType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "methods": [
        {
          "name": "position",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.CharBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.DoubleBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.FloatBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.IntBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.LongBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.ShortBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    }
  ]
}